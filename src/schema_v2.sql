CREATE TABLE IF NOT EXISTS MEMBER
(
    MEMBER_ID    BIGINT      NOT NULL AUTO_INCREMENT,
    EMAIL        VARCHAR(30) NOT NULL,
    PASSWORD     VARCHAR     NOT NULL UNIQUE,
    NICKNAME     VARCHAR(20) NOT NULL,
    PHONE_NUMBER VARCHAR(14) NOT NULL,
    CREATED_AT   DATETIME,
    MODIFIED_AT  DATETIME,
    BUSINESS_ID  BIGINT,
    WISHLIST_ID  BIGINT,
    PRIMARY KEY (MEMBER_ID),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS (BUSINESS_ID),
    FOREIGN KEY (WISHLIST_ID) REFERENCES WISHLIST (WISHLIST_ID)
    );

CREATE TABLE IF NOT EXISTS BUSINESS
(
    BUSINESS_ID         BIGINT      NOT NULL AUTO_INCREMENT,
    BUSINESS_NAME       VARCHAR(50) NOT NULL,
    REGISTRATION_NUMBER VARCHAR     NOT NULL,
    PHONE_NUMBER        VARCHAR(14) NOT NULL,
    OPENING_DATE        DATETIME    NOT NULL,
    BUSINESS_STATUS     VARCHAR     NOT NULL,
    BUSINESS_CATEGORY   VARCHAR     NOT NULL,
    MEMBER_ID           BIGINT      NOT NULL,
    PRIMARY KEY (BUSINESS_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID)
    );

CREATE TABLE IF NOT EXISTS STORE
(
    STORE_ID       BIGINT   NOT NULL AUTO_INCREMENT,
    STORE_NAME     VARCHAR  NOT NULL,
    CATEGORY       VARCHAR  NOT NULL,
    BODY           LONGTEXT NOT NULL,
    ADDRESS        VARCHAR  NOT NULL,
    LATITUDE       DOUBLE,
    LONGITUDE      DOUBLE,
    KAKAO          VARCHAR  NOT NULL,
    CONTACT        VARCHAR,
    LIKE_COUNT     INT,
    CREATED_AT     DATETIME NOT NULL,
    MODIFIED_AT    DATETIME,

    BUSINESS_ID    BIGINT   NOT NULL,
    RESERVATION_ID BIGINT   NOT NULL,
    PRODUCT_ID     BIGINT   NOT NULL,
    PRIMARY KEY (STORE_ID),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS (BUSINESS_ID),
    FOREIGN KEY (RESERVATION_ID) REFERENCES RESERVATION (RESERVATION_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID)
    );

CREATE TABLE IF NOT EXISTS PRODUCT
(
    PRODUCT_ID BIGINT NOT NULL AUTO_INCREMENT,
    PRICE      INT    NOT NULL,
    MAX_COUNT  INT    NOT NULL,
    STORE_ID   BIGINT NOT NULL,
    PRIMARY KEY (PRODUCT_ID),
    FOREIGN KEY (STORE_ID) REFERENCES STORE (STORE_ID)
    );

CREATE TABLE IF NOT EXISTS RESERVATION
(
    RESERVATION_ID    BIGINT  NOT NULL AUTO_INCREMENT,
    RESERVATION_NAME  VARCHAR NOT NULL,
    RESERVATION_PHONE VARCHAR NOT NULL,
    RESERVATION_EMAIL VARCHAR NOT NULL,
    RESERVATION_DATE  DATE    NOT NULL,
    STATUS            VARCHAR NOT NULL,
    PAYMENT_ID        BIGINT  NOT NULL,
    MEMBER_ID         BIGINT  NOT NULL,
    PRODUCT_ID        BIGINT  NOT NULL,
    PRIMARY KEY (RESERVATION_ID),
    FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT (PAYMENT_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID)
    );

CREATE TABLE IF NOT EXISTS PAYMENT
(
    PAYMENT_ID     BIGINT  NOT NULL AUTO_INCREMENT,
    AMOUNT         BIGINT  NOT NULL,
    STATUS         VARCHAR NOT NULL,
    PAYMENT_METHOD VARCHAR NOT NULL,
    CREATED_AT     DATE,
    MEMBER_ID      BIGINT  NOT NULL,
    STORE_ID       BIGINT  NOT NULL,
    PRIMARY KEY (PAYMENT_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
    FOREIGN KEY (STORE_ID) REFERENCES STORE (STORE_ID)
    );

CREATE TABLE IF NOT EXISTS WISHLIST
(
    WISHLIST_ID BIGINT NOT NULL AUTO_INCREMENT,
    MEMBER_ID   BIGINT NOT NULL,
    STORE_ID    BIGINT NOT NULL,
    PRIMARY KEY (WISHLIST_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
    FOREIGN KEY (STORE_ID) REFERENCES STORE (STORE_ID)
    );

CREATE TABLE IF NOT EXISTS REVIEW
(
    REVIEW_ID  BIGINT NOT NULL AUTO_INCREMENT,
    CONTENT    TEXT   NOT NULL,
    STAR       INT    NOT NULL,
    CREATED_AT DATE,
    MEMBER_ID  BIGINT NOT NULL,
    STORE_ID   BIGINT NOT NULL,
    PRIMARY KEY (REVIEW_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
    FOREIGN KEY (STORE_ID) REFERENCES STORE (STORE_ID)
    );