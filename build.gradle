plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    // .adoc 확장자를 가지는 AsciiDoc 문서를 생성해주는 Asciidoctor 플러그인
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.codestates'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

// API 문서 스니펫이 생성될 경로 지정
ext {
    set('snippetsDir', file("build/generated-snippets"))
}

// Asciidoctor에서 사용되는 의존 그룹 지정
// -> :asciidoctor task가 실행되면 내부적으로 asciidoctorExtension이라는 그룹을 지정함
configurations {
    asciidoctorExtensions
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'com.google.code.gson:gson'
    implementation 'org.mapstruct:mapstruct:1.5.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'

    // configuration에서 지정한 그룹에 의존 라이브러리가 포함됨
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // JWT 를 위한 jjwt 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly	'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

// :test task 실행 시, API문서 생성 스네핏 디렉토리 경로 설정
tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

// :asciidoctor task 실행 시, asciidoctor를 사용하기 위해 asciidoctorExtensions를 설정함
tasks.named('asciidoctor') {
    configurations "asciidoctorExtensions"
    inputs.dir snippetsDir
    dependsOn test
}

// :build task가 실행되기 전에 실행되는 task
// 여기서의 index.html은 외부에 제공하기 위한 용도
task copyDocument(type: Copy) {
    dependsOn asciidoctor // :asciidoctor task가 실행된 후 task가 실행되도록 의존성 설정
    println "asciidoctor output: ${asciidoctor.outputDir}"
    from file("build/docs/asciidoc/") // index.html 카피
    into file("src/main/resources/static/docs") // 이 경로로 index.html 추가
}

// :copyDocument task가 먼저 수행되도록 설정
build {
    dependsOn copyDocument
}

// 애플리케이션 실행파일이 생성하는 task 설정
// 여기서의 index.html은 웹 브라우저에서 API문서를 확인하기 위한 용도
bootJar {
    enabled = true
    dependsOn copyDocument // :bootJar task 실행 전에 :copyDocument가 실행되도록 설정

    // asciidoctor 실행으로 생성되는 index.html 파일을 jar 파일 안에 추가
    // -> http://localhost:8080/docs/index.html 접속 후, API 문서 확인 가능
    from("${asciidoctor.outputDir}") {
        into 'src/main/resources/static/docs'
    }
}
